name: Push to PyPI

on:
  push:
    tags: v*
    branches: pypi-deploy

  workflow_dispatch:



jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.7]
        
    runs-on: ${{ matrix.os }}
    
    environment: PyPI
    steps:
      - uses: actions/checkout@v2
        with:
          ref: refs/tags/v1.0.1 # temporary
      
      - name: Install GCC10 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update -qq
          sudo apt install gcc-10 g++-10
          sudo apt install python${{ matrix.python }}

      - name: Install GCC10 (MacOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          brew install gcc@10 python@${{ matrix.python }}
          
      - name: Install numpy and cython
        run: pip3 install numpy cython
      
      - name: Determine version tag
        run: |
          echo "SETUP_VERSION=`python setup.py --version`" >> $GITHUB_ENV
          echo "VERSION_TAG=`git describe --tags | cut -c 2-`" >> $GITHUB_ENV
        
      - name: Verify version naming is consistent
        run: |
          if [ "${{ env.VERSION_TAG }}" == "${{ env.SETUP_VERSION }}" ]; then
              echo Git tag and python setup.py versions match: ${{ env.VERSION_TAG }}
          else
              echo Version label mismatch
              echo Git tag-derived version is ${{ env.VERSION_TAG }}
              echo setup.py-derived version is ${{ env.SETUP_VERSION }}
              exit 1;
          fi
          
      - name: Install twine
        run: pip3 install twine
          
      - name: Build source distribution
        run: python3 setup.py sdist
        
      - name: Build binary distribution
        run: python3 setup.py bdist
        
      - name: Twine upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine check dist/* # when ready, we'll use upload --repository testpypi
